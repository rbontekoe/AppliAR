var documenterSearchIndex = {"docs":
[{"location":"chapter1/#.-Domain-objects","page":"1 - Domain","title":"1. Domain objects","text":"","category":"section"},{"location":"chapter1/#invoice-id","page":"1 - Domain","title":"invoice id","text":"","category":"section"},{"location":"chapter1/","page":"1 - Domain","title":"1 - Domain","text":"id","category":"page"},{"location":"chapter1/#AppliAR.Domain.id","page":"1 - Domain","title":"AppliAR.Domain.id","text":"id(i::Invoice)\n\nReturns the id of an invoice.\n\nexample\n\njulia> using AppliSales\n\njulia> using AppliAR\n\njulia> orders = AppliSales.process();\n\njulia> AppliAR.process(orders);\n\njulia> unpaid_invoices = AppliAR.retrieve_unpaid_invoices();\n\njulia> id(unpaid_invoices[1])\n\"A1001\"\n\n\n\n\n\n","category":"function"},{"location":"chapter1/#meta-information","page":"1 - Domain","title":"meta information","text":"","category":"section"},{"location":"chapter1/","page":"1 - Domain","title":"1 - Domain","text":"meta","category":"page"},{"location":"chapter1/#AppliAR.Domain.meta","page":"1 - Domain","title":"AppliAR.Domain.meta","text":"meta(i::Invoice)\n\nReturns the meta data of an invoice.\n\nexample\n\njulia> using AppliSales\n\njulia> using AppliAR\n\njulia> orders = AppliSales.process();\n\njulia> AppliAR.process(orders);\n\njulia> unpaid_invoices = AppliAR.retrieve_unpaid_invoices();\n\njulia> m = AppliAR.meta(unpaid_invoices[1])\nMetaInvoice(\"9715406426271665630\", \"LS\", 2020-07-14T16:56:33.194, \"€\", 1.0)\n\njulia> orderid = order_id(m)\n\"9715406426271665630\"\n\njulia> trainingid = training_id(m)\n\"LS\"\n\njulia> date(m)\n\njulia> currency(m)\n\"€\"\n\njulia> currency_ratio(m)\n1.0\n\n\n\n\n\n","category":"function"},{"location":"chapter1/#header-data","page":"1 - Domain","title":"header data","text":"","category":"section"},{"location":"chapter1/","page":"1 - Domain","title":"1 - Domain","text":"header","category":"page"},{"location":"chapter1/#AppliAR.Domain.header","page":"1 - Domain","title":"AppliAR.Domain.header","text":"header(i::Invoice)\n\nReturns the header of an invoice.\n\nexample\n\njulia> using AppliSales\n\njulia> using AppliAR\n\njulia> orders = AppliSales.process();\n\njulia> AppliAR.process(orders);\n\njulia> unpaid_invoices = AppliAR.retrieve_unpaid_invoices();\n\njulia> h = header(unpaid_invoices[1])\nHeader(\"A1001\", \"Scrooge Investment Bank\", \"1180 Seven Seas Dr\", \"FL 32830\", \"Lake Buena Vista\", \"USA\", \"PO-456\", \"Scrooge McDuck\", \"scrooge@duckcity.com\")\n\njulia> invoice_nbr(h)\n\"A1001\"\n\njulia> name(h)\n\"Scrooge Investment Bank\"\n\njulia> address(h)\n\"1180 Seven Seas Dr\"\n\njulia> city(h)\n\"Lake Buena Vista\"\n\njulia> country(h)\n\"USA\"\n\njulia> order_ref(h)\n\"PO-456\"\n\njulia> name_contact(h)\n\"Scrooge McDuck\n\njulia> email_contact(h)\n\"scrooge@duckcity.com\"\n\n\n\n\n\n","category":"function"},{"location":"chapter1/#body-data","page":"1 - Domain","title":"body data","text":"","category":"section"},{"location":"chapter1/","page":"1 - Domain","title":"1 - Domain","text":"body","category":"page"},{"location":"chapter1/#AppliAR.Domain.body","page":"1 - Domain","title":"AppliAR.Domain.body","text":"body(i::Invoice)\n\nReturns the body of an invoice.\n\nexample\n\njulia> using AppliSales\n\njulia> using AppliAR\n\njulia> orders = AppliSales.process();\n\njulia> AppliAR.process(orders);\n\njulia> unpaid_invoices = AppliAR.retrieve_unpaid_invoices();\n\njulia> b = body(unpaid_invoices[1])\nOpentrainingItem(\"Learn Smiling\", 2019-08-30T00:00:00, 1000.0, [\"Scrooge McDuck\"], 0.21)\n\njulia> name_training(b)\n\"Learn Smiling\"\n\njulia> date(b)\n2019-08-30T00:00:00\n\njulia> price_per_student(b)\n1000.0\n\njulia> students(b)\n1-element Array{String,1}:\n\"Scrooge McDuck\"\n\njulia> vat_perc(b)\n0.21\n\n\n\n\n\n","category":"function"},{"location":"chapter2/#.-API-functions","page":"2 - API","title":"2. API functions","text":"","category":"section"},{"location":"chapter2/#create","page":"2 - API","title":"create","text":"","category":"section"},{"location":"chapter2/","page":"2 - API","title":"2 - API","text":"create","category":"page"},{"location":"chapter2/#AppliAR.API.create","page":"2 - API","title":"AppliAR.API.create","text":"create(::AppliSales.Order, invoice_id::String)::UnpaidInvoice\n\ncreate(::UnpaidInvoice, ::AppliGeneralLedger.BankStatement)::PaidInvoice\n\nCreate an UnpaidInvoice from an AppliSales.Order.\nCreate a PaidInvoice from an UnpaidInvoice and a BankStatement.\n\n@see also conv2entry\n\nExample - create an UnpaidInvoice\n\njulia> using AppliAR\n\njulia> using AppliSales\n\njulia> invnbr = 1000\n\njulia> invoices = [create(order, \"A\" * string(global invnbr += 1)) for order in orders]\n\nExample - create a PaidInvoice\n\njulia> using Dates\n\njulia> using AppliSales\n\njulia> using AppliAR\n\njulia> const PATH_CSV = \"./bank.csv\";\n\njulia> invnbr = 1000;\n\njulia> orders = AppliSales.process();\n\njulia> invoices = [create(order, \"A\" * string(global invnbr += 1)) for order in orders];\n\njulia> stm1 = BankStatement(Date(2020-01-15), \"Duck City Chronicals Invoice A1002\", \"NL93INGB\", 2420.0);\n\njulia> stms = [stm1];\n\njulia> paid_invoices = PaidInvoice[];\n\njulia> for unpaid_invoice in invoices\n          for s in stms # get potential paid invoices\n             if occursin(id(unpaid_invoice), descr(s)) # description contains invoice number\n                push!(paid_invoices, create(unpaid_invoice, s))\n             end\n          end\n      end;\n\njulia> println(paid_invoices);\n\n\n\n\n\n","category":"function"},{"location":"chapter4/","page":"4 - Reporting","title":"4 - Reporting","text":"Reporting","category":"page"},{"location":"chapter4/#Aging-report","page":"4 - Reporting","title":"Aging report","text":"","category":"section"},{"location":"chapter4/","page":"4 - Reporting","title":"4 - Reporting","text":"report","category":"page"},{"location":"chapter4/#AppliAR.report","page":"4 - Reporting","title":"AppliAR.report","text":"report\n\nGenerate an aging report\n\nExample\n\njulia> using Dates\n\njulia> using AppliSales\n\njulia> using AppliAR\n\njulia> orders = AppliSales.process();\n\njulia> AppliAR.process(orders);\n\njulia> stm1 = BankStatement(Date(2020-01-15), \"Duck City Chronicals Invoice A1002\", \"NL93INGB\", 2420.0);\n\njulia> stms = [stm1];\n\njulia> AppliAR.process(unpaid_invoices, stms);\n\njulia> r = report()\n2-element Array{Any,1}:\n AppliAR.Reporting.Aging(\"A1001\", \"Scrooge Investment Bank\", 2020-07-14, 1210.0, 0 days)\n AppliAR.Reporting.Aging(\"A1003\", \"Donalds Hardware Store\", 2020-07-14, 1210.0, 0 days)\n\n\n\n\n\n","category":"function"},{"location":"chapter3/#.-Infrastructure-functions","page":"3 - Infrastructure","title":"3. Infrastructure functions","text":"","category":"section"},{"location":"chapter3/#process","page":"3 - Infrastructure","title":"process","text":"","category":"section"},{"location":"chapter3/","page":"3 - Infrastructure","title":"3 - Infrastructure","text":"process","category":"page"},{"location":"chapter3/#AppliAR.Infrastructure.process","page":"3 - Infrastructure","title":"AppliAR.Infrastructure.process","text":"process(::Array{AppliSales.Order, 1}; path=\"./test_invoices.sqlite\")\n\nprocess(::Array{UnpaidInvoice, 1}, ::Array{AppliGeneralLedger.BankStatement, 1}; path=\"./test_invoices.sqlite\")\n\nCreates UnpaidInvoice's from AppliSale.Order's, archive them, and creates AppliGeneralLedger.Entry's for the general ledger.\nCreates PaidInvoices's from UnpaidInvoices by using AppliGeneralLedger.BankStatement's, and creates AppliGeneralLedger.Entry's for the general ledger.\n\nExample\n\njulia> using AppliSales\n\njulia> using AppliGeneralLedger\n\njulia> using AppliAR\n\njulia> const PATH_CSV = \"./bank.csv\"\n\njulia> orders = AppliSales.process()\n\njulia> journal_entries_1 = AppliAR.process(orders)\n\njulia> stms = AppliAR.read_bank_statements(PATH_CSV)\n\njulia> unpaid_invoices = AppliAR.retrieve_unpaid_invoices()\n\njulia> journal_entries_2 = AppliAR.process(unpaid_invoices, stms)\n\njulia> cmd = `rm test_invoicing.txt test_invoicing_paid.txt invoicenbr.txt`\n\njulia> run(cmd)\n\n\n\n\n\n","category":"function"},{"location":"chapter3/#retrieve_unpaid_invoices","page":"3 - Infrastructure","title":"retrieve_unpaid_invoices","text":"","category":"section"},{"location":"chapter3/","page":"3 - Infrastructure","title":"3 - Infrastructure","text":"retrieve_unpaid_invoices","category":"page"},{"location":"chapter3/#AppliAR.Infrastructure.retrieve_unpaid_invoices","page":"3 - Infrastructure","title":"AppliAR.Infrastructure.retrieve_unpaid_invoices","text":"retrieve_unpaid_invoices(;path=\"./test_invoicing.txt\")::Array{UnpaidInvoice, 1}\n\nRetrieves UnpaidInvoice's from a text file.\n\nExample\n\njulia> using AppliSales\n\njulia> using AppliAR\n\njulia> orders = AppliSales.process()\n\njulia> AppliAR.process(orders)\n\njulia> unpaid_invoices = retrieve_unpaid_invoices()\n\njulia> cmd = `rm test_invoicing.txt invoicenbr.txt`\n\njulia> run(cmd)\n\n\n\n\n\n","category":"function"},{"location":"chapter3/#read_bank_statements","page":"3 - Infrastructure","title":"read_bank_statements","text":"","category":"section"},{"location":"chapter3/","page":"3 - Infrastructure","title":"3 - Infrastructure","text":"read_bank_statements","category":"page"},{"location":"chapter3/#AppliAR.Infrastructure.read_bank_statements","page":"3 - Infrastructure","title":"AppliAR.Infrastructure.read_bank_statements","text":"read_bank_statements(path::String)\n\nRetrieves bank statements from a CSV-file.\n\nExample\n\njulia> const PATH_CSV = \"./bank.csv\"\n\njulia> stms = AppliAR.read_bank_statements(PATH_CSV)\n\n\n\n\n\n","category":"function"},{"location":"chapter3/#retrieve_paid_invoices","page":"3 - Infrastructure","title":"retrieve_paid_invoices","text":"","category":"section"},{"location":"chapter3/","page":"3 - Infrastructure","title":"3 - Infrastructure","text":"retrieve_paid_invoices","category":"page"},{"location":"chapter3/#AppliAR.Infrastructure.retrieve_paid_invoices","page":"3 - Infrastructure","title":"AppliAR.Infrastructure.retrieve_paid_invoices","text":"retrieve_paid_invoices(;path=\"./test_invoicing_paid.txt\")::Array{PaidInvoice, 1}\n\nRetrieves PaidInvoice's from a text file.\n\nExample\n\njulia> using AppliSales\n\njulia> using AppliAR\n\njulia> orders = AppliSales.process()\n\njulia> AppliAR.process(orders)\n\njulia> unpaid_invoices = retrieve_unpaid_invoices()\n\njulia> const PATH_CSV = \"./bank.csv\"\n\njulia> stms = AppliAR.read_bank_statements(PATH_CSV)\n\njulia> AppliAR.process(unpaid_invoices, stms)\n\njulia> paid_invoices = AppliAR.retrieve_paid_invoices()\n\njulia> cmd = `rm test_invoicing.txt test_invoicing_paid.txt invoicenbr.txt`\n\njulia> run(cmd)\n\n\n\n\n\n","category":"function"},{"location":"#AppliAR.jl","page":"Accounts Receivable","title":"AppliAR.jl","text":"","category":"section"},{"location":"","page":"Accounts Receivable","title":"Accounts Receivable","text":"","category":"page"},{"location":"","page":"Accounts Receivable","title":"Accounts Receivable","text":"Modules = [AppliAR]","category":"page"},{"location":"#AppliAR.report-Tuple{}","page":"Accounts Receivable","title":"AppliAR.report","text":"report\n\nGenerate an aging report\n\nExample\n\njulia> using Dates\n\njulia> using AppliSales\n\njulia> using AppliAR\n\njulia> orders = AppliSales.process();\n\njulia> AppliAR.process(orders);\n\njulia> stm1 = BankStatement(Date(2020-01-15), \"Duck City Chronicals Invoice A1002\", \"NL93INGB\", 2420.0);\n\njulia> stms = [stm1];\n\njulia> AppliAR.process(unpaid_invoices, stms);\n\njulia> r = report()\n2-element Array{Any,1}:\n AppliAR.Reporting.Aging(\"A1001\", \"Scrooge Investment Bank\", 2020-07-14, 1210.0, 0 days)\n AppliAR.Reporting.Aging(\"A1003\", \"Donalds Hardware Store\", 2020-07-14, 1210.0, 0 days)\n\n\n\n\n\n","category":"method"}]
}
